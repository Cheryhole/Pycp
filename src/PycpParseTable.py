
# PycpParseTable.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BREAK COLON COMMA COMMENT CONST CONTINUE DECIMAL DEL DIVIDE DOT ELIF ELSE EQUALS FALSE FOR FUNC IDENTIFIER IF IMPORT IN INTEGER LBRACE LBRACKET LPAREN MINUS MODULO NEW NONE NOT OF OR PASS PLUS RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING TIMES TRUE VAR WHILE\n\tstatement : statements SEMICOLON\n\t\t\t\t\t\t| statement SEMICOLON statements\n\t\n\tstatements : statement_new_var\n\t\t\t\t\t\t | expression\n\tstatement_new_var : VAR IDENTIFIER EQUALS expressionexpression : termexpression : expression PLUS termexpression : expression MINUS termexpression : expression DOT IDENTIFIERexpression : IDENTIFIER OF expressionterm : factorterm : term TIMES factorterm : term DIVIDE factorterm : term MODULO factor\n\tfactor : list \n\t\t\t\t | tuple \n\t\t\t\t | object\n\t\n\tfactor : LPAREN expression RPAREN\n\t\t\t\t | LPAREN term RPAREN\n\t\t\t\t | LPAREN factor RPAREN\n\t\t\t\t | LPAREN RPAREN\n\tfactor : IDENTIFIERfactor : STRINGfactor : INTEGERfactor : DECIMALfactor : TRUEfactor : FALSEfactor : NONE\n\tlist : LBRACKET list_items RBRACKET\n\t\t\t | LBRACKET RBRACKET\n\t\n\tlist_items : factor COMMA list_items\n\t\t\t\t\t\t | factor COMMA\n\t\t\t\t\t\t | factor\n\t\n\ttuple : LPAREN tuple_items RPAREN\n\t\t\t\t| LPAREN RPAREN\n\t\n\ttuple_items : factor COMMA tuple_items\n\t\t\t\t\t\t\t| factor COMMA\t\n\t\n\tobject : LBRACE object_items RBRACE\n\t\t\t\t | LBRACE RBRACE\n\t\n\tobject_items : factor COLON factor COMMA object_items\n\t\t\t\t\t\t\t | factor COLON factor COMMA\n\t\t\t\t\t\t\t | factor COLON factor\n\t'
    
_lr_action_items = {'VAR':([0,21,],[5,5,]),'IDENTIFIER':([0,5,12,19,20,21,23,24,25,27,28,29,30,47,55,58,60,66,],[6,26,6,39,39,6,39,39,46,6,39,39,39,6,39,39,39,39,]),'LPAREN':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'STRING':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'INTEGER':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'DECIMAL':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'TRUE':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'FALSE':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'NONE':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LBRACKET':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'LBRACE':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'$end':([1,3,4,6,7,8,9,10,11,13,14,15,16,17,18,22,32,37,39,41,43,44,45,46,48,49,50,51,52,53,54,56,57,59,61,],[0,-3,-4,-22,-6,-11,-15,-16,-17,-23,-24,-25,-26,-27,-28,-1,-21,-30,-22,-39,-2,-7,-8,-9,-10,-12,-13,-14,-18,-19,-20,-34,-29,-38,-5,]),'SEMICOLON':([1,2,3,4,6,7,8,9,10,11,13,14,15,16,17,18,22,32,37,39,41,43,44,45,46,48,49,50,51,52,53,54,56,57,59,61,],[21,22,-3,-4,-22,-6,-11,-15,-16,-17,-23,-24,-25,-26,-27,-28,-1,-21,-30,-22,-39,-2,-7,-8,-9,-10,-12,-13,-14,-18,-19,-20,-34,-29,-38,-5,]),'PLUS':([4,6,7,8,9,10,11,13,14,15,16,17,18,31,32,33,34,37,39,41,44,45,46,48,49,50,51,52,53,54,56,57,59,61,],[23,-22,-6,-11,-15,-16,-17,-23,-24,-25,-26,-27,-28,23,-21,-6,-11,-30,-22,-39,-7,-8,-9,23,-12,-13,-14,-18,-19,-20,-34,-29,-38,23,]),'MINUS':([4,6,7,8,9,10,11,13,14,15,16,17,18,31,32,33,34,37,39,41,44,45,46,48,49,50,51,52,53,54,56,57,59,61,],[24,-22,-6,-11,-15,-16,-17,-23,-24,-25,-26,-27,-28,24,-21,-6,-11,-30,-22,-39,-7,-8,-9,24,-12,-13,-14,-18,-19,-20,-34,-29,-38,24,]),'DOT':([4,6,7,8,9,10,11,13,14,15,16,17,18,31,32,33,34,37,39,41,44,45,46,48,49,50,51,52,53,54,56,57,59,61,],[25,-22,-6,-11,-15,-16,-17,-23,-24,-25,-26,-27,-28,25,-21,-6,-11,-30,-22,-39,-7,-8,-9,25,-12,-13,-14,-18,-19,-20,-34,-29,-38,25,]),'OF':([6,],[27,]),'TIMES':([6,7,8,9,10,11,13,14,15,16,17,18,32,33,34,37,39,41,44,45,49,50,51,52,53,54,56,57,59,],[-22,28,-11,-15,-16,-17,-23,-24,-25,-26,-27,-28,-21,28,-11,-30,-22,-39,28,28,-12,-13,-14,-18,-19,-20,-34,-29,-38,]),'DIVIDE':([6,7,8,9,10,11,13,14,15,16,17,18,32,33,34,37,39,41,44,45,49,50,51,52,53,54,56,57,59,],[-22,29,-11,-15,-16,-17,-23,-24,-25,-26,-27,-28,-21,29,-11,-30,-22,-39,29,29,-12,-13,-14,-18,-19,-20,-34,-29,-38,]),'MODULO':([6,7,8,9,10,11,13,14,15,16,17,18,32,33,34,37,39,41,44,45,49,50,51,52,53,54,56,57,59,],[-22,30,-11,-15,-16,-17,-23,-24,-25,-26,-27,-28,-21,30,-11,-30,-22,-39,30,30,-12,-13,-14,-18,-19,-20,-34,-29,-38,]),'RPAREN':([6,7,8,9,10,11,12,13,14,15,16,17,18,31,32,33,34,35,37,39,41,44,45,46,48,49,50,51,52,53,54,55,56,57,59,63,],[-22,-6,-11,-15,-16,-17,32,-23,-24,-25,-26,-27,-28,52,-21,53,54,56,-30,-22,-39,-7,-8,-9,-10,-12,-13,-14,-18,-19,-20,-37,-34,-29,-38,-36,]),'COMMA':([6,9,10,11,13,14,15,16,17,18,32,34,37,38,39,41,52,53,54,56,57,59,62,65,],[-22,-15,-16,-17,-23,-24,-25,-26,-27,-28,-21,55,-30,58,-22,-39,-18,-19,-20,-34,-29,-38,55,66,]),'RBRACKET':([9,10,11,13,14,15,16,17,18,19,32,36,37,38,39,41,52,53,54,56,57,58,59,64,],[-15,-16,-17,-23,-24,-25,-26,-27,-28,37,-21,57,-30,-33,-22,-39,-18,-19,-20,-34,-29,-32,-38,-31,]),'COLON':([9,10,11,13,14,15,16,17,18,32,37,39,41,42,52,53,54,56,57,59,],[-15,-16,-17,-23,-24,-25,-26,-27,-28,-21,-30,-22,-39,60,-18,-19,-20,-34,-29,-38,]),'RBRACE':([9,10,11,13,14,15,16,17,18,20,32,37,39,40,41,52,53,54,56,57,59,65,66,67,],[-15,-16,-17,-23,-24,-25,-26,-27,-28,41,-21,-30,-22,59,-39,-18,-19,-20,-34,-29,-38,-42,-41,-40,]),'EQUALS':([26,],[47,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'statements':([0,21,],[2,43,]),'statement_new_var':([0,21,],[3,3,]),'expression':([0,12,21,27,47,],[4,31,4,48,61,]),'term':([0,12,21,23,24,27,47,],[7,33,7,44,45,7,7,]),'factor':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[8,34,38,42,8,8,8,8,49,50,51,8,62,38,65,42,]),'list':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'tuple':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'object':([0,12,19,20,21,23,24,27,28,29,30,47,55,58,60,66,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'tuple_items':([12,55,],[35,63,]),'list_items':([19,58,],[36,64,]),'object_items':([20,66,],[40,67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> statements SEMICOLON','statement',2,'p_statement','PycpAst.py',30),
  ('statement -> statement SEMICOLON statements','statement',3,'p_statement','PycpAst.py',31),
  ('statements -> statement_new_var','statements',1,'p_statements','PycpAst.py',36),
  ('statements -> expression','statements',1,'p_statements','PycpAst.py',37),
  ('statement_new_var -> VAR IDENTIFIER EQUALS expression','statement_new_var',4,'p_statement_new_var','PycpAst.py',41),
  ('expression -> term','expression',1,'p_expression','PycpAst.py',45),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','PycpAst.py',48),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','PycpAst.py',55),
  ('expression -> expression DOT IDENTIFIER','expression',3,'p_expression_dot_attr','PycpAst.py',62),
  ('expression -> IDENTIFIER OF expression','expression',3,'p_expression_of_attr','PycpAst.py',67),
  ('term -> factor','term',1,'p_term','PycpAst.py',72),
  ('term -> term TIMES factor','term',3,'p_term_times','PycpAst.py',75),
  ('term -> term DIVIDE factor','term',3,'p_term_divide','PycpAst.py',82),
  ('term -> term MODULO factor','term',3,'p_term_modulo','PycpAst.py',89),
  ('factor -> list','factor',1,'p_factor','PycpAst.py',97),
  ('factor -> tuple','factor',1,'p_factor','PycpAst.py',98),
  ('factor -> object','factor',1,'p_factor','PycpAst.py',99),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_paren','PycpAst.py',104),
  ('factor -> LPAREN term RPAREN','factor',3,'p_factor_paren','PycpAst.py',105),
  ('factor -> LPAREN factor RPAREN','factor',3,'p_factor_paren','PycpAst.py',106),
  ('factor -> LPAREN RPAREN','factor',2,'p_factor_paren','PycpAst.py',107),
  ('factor -> IDENTIFIER','factor',1,'p_factor_identifier','PycpAst.py',111),
  ('factor -> STRING','factor',1,'p_factor_string','PycpAst.py',116),
  ('factor -> INTEGER','factor',1,'p_factor_integer','PycpAst.py',121),
  ('factor -> DECIMAL','factor',1,'p_factor_decimal','PycpAst.py',126),
  ('factor -> TRUE','factor',1,'p_factor_true','PycpAst.py',131),
  ('factor -> FALSE','factor',1,'p_factor_false','PycpAst.py',136),
  ('factor -> NONE','factor',1,'p_factor_none','PycpAst.py',141),
  ('list -> LBRACKET list_items RBRACKET','list',3,'p_list','PycpAst.py',149),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','PycpAst.py',150),
  ('list_items -> factor COMMA list_items','list_items',3,'p_list_items','PycpAst.py',159),
  ('list_items -> factor COMMA','list_items',2,'p_list_items','PycpAst.py',160),
  ('list_items -> factor','list_items',1,'p_list_items','PycpAst.py',161),
  ('tuple -> LPAREN tuple_items RPAREN','tuple',3,'p_tuple','PycpAst.py',171),
  ('tuple -> LPAREN RPAREN','tuple',2,'p_tuple','PycpAst.py',172),
  ('tuple_items -> factor COMMA tuple_items','tuple_items',3,'p_tuple_items','PycpAst.py',181),
  ('tuple_items -> factor COMMA','tuple_items',2,'p_tuple_items','PycpAst.py',182),
  ('object -> LBRACE object_items RBRACE','object',3,'p_object','PycpAst.py',192),
  ('object -> LBRACE RBRACE','object',2,'p_object','PycpAst.py',193),
  ('object_items -> factor COLON factor COMMA object_items','object_items',5,'p_object_items','PycpAst.py',202),
  ('object_items -> factor COLON factor COMMA','object_items',4,'p_object_items','PycpAst.py',203),
  ('object_items -> factor COLON factor','object_items',3,'p_object_items','PycpAst.py',204),
]
